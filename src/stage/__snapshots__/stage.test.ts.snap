// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`stage create named: names stage 1`] = `
Stage {
  "_config": {
    "name": "name",
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;

exports[`stage create with function: function stage 1`] = `
Stage {
  "_config": {
    "name": 
"function() {
      this.name = "run this Stage";
    }"
,
    "run": [Function],
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;

exports[`stage create with Lambda 3: lambda stage 1`] = `
Stage {
  "_config": {
    "name": 
"(err, ctx, done) => {
      if (!err)
        ctx.name = "run the stage", done(void 0, ctx);
      else
        done(err);
    }"
,
    "run": [Function],
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;

exports[`stage validate using schema 1`] = `[ComplexError]`;

exports[`stage initialize other stuff sucessfully: schema stage 1 1`] = `
Stage {
  "_config": {
    "name": "stage",
    "run": [Function],
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;

exports[`stage create with Lambda 2: lambda stage 1`] = `
Stage {
  "_config": {
    "name": 
"(err, ctx) => {
      if (!err)
        return ctx.name = "run the stage", Promise.resolve(ctx);
      else
        return Promise.reject(err);
    }"
,
    "run": [Function],
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;

exports[`stage create with Config: config stage 1`] = `
Stage {
  "_config": {
    "name": 
"(err, ctx, done) => {
      if (!err)
        ctx.name = "run the stage", done(void 0, ctx);
      else
        done(err);
    }"
,
    "run": [Function],
  },
  "run": undefined,
  [Symbol(stage)]: true,
}
`;
