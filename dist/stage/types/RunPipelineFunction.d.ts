import * as z from 'zod';
import { CallbackFunction } from './CallbackFunction';
export type CustomRun0SyncVoid = () => void;
export declare const CustomRun0SyncVoid: z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodUndefined>;
export type CustomRun0Sync<R> = () => R;
export declare const CustomRun0Sync: z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodAny>;
export type CustomRun0Async<R> = () => Promise<R>;
export declare const CustomRun0Async: z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>;
export type CustomRun1Sync<R> = (ctx: R) => R;
export declare const CustomRun1Sync: z.ZodFunction<z.ZodTuple<[z.ZodAny], z.ZodUnknown>, z.ZodAny>;
export type CustomRun1Async<R> = (ctx: R) => Promise<R>;
export declare const CustomRun1Async: z.ZodFunction<z.ZodTuple<[z.ZodAny], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>;
export type CustomRun2Async<R> = (err: any, ctx: R) => Promise<R>;
export declare const CustomRun2Async: z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>;
export type CustomRun2Callback<R> = (ctx: R, done: CallbackFunction<R>) => void;
export declare const CustomRun2Callback: z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodUndefined>], z.ZodUnknown>, z.ZodUnknown>;
export type CustomRun3Callback<R> = (err: any, ctx: R, done: CallbackFunction<R>) => void;
export declare const CustomRun3Callback: z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodUndefined>], z.ZodUnknown>, z.ZodUnknown>;
export declare const RunPipelineFunction: z.ZodUnion<[z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodUndefined>, z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodAny>, z.ZodFunction<z.ZodTuple<[z.ZodUndefined], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>, z.ZodFunction<z.ZodTuple<[z.ZodAny], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>, z.ZodFunction<z.ZodTuple<[z.ZodAny], z.ZodUnknown>, z.ZodAny>, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodUndefined>], z.ZodUnknown>, z.ZodUnknown>, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodPromise<z.ZodAny>>, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny, z.ZodFunction<z.ZodTuple<[z.ZodAny, z.ZodAny], z.ZodUnknown>, z.ZodUndefined>], z.ZodUnknown>, z.ZodUnknown>]>;
export type RunPipelineFunction<R> = CustomRun0SyncVoid | CustomRun0Sync<R> | CustomRun0Async<R> | CustomRun1Async<R> | CustomRun1Sync<R> | CustomRun2Callback<R> | CustomRun2Async<R> | CustomRun3Callback<R>;
export declare function isCustomRun0Sync<R>(inp: unknown): inp is CustomRun0Sync<R>;
export declare function isCustomRun0Async<R>(inp: unknown): inp is CustomRun0Async<R>;
export declare function isCustomRun1Async<R>(inp: unknown): inp is CustomRun1Async<R>;
export declare function isCustomRun1Sync<R>(inp: unknown): inp is CustomRun1Sync<R>;
export declare function isCustomRun2Callback<R>(inp: unknown): inp is CustomRun2Callback<R>;
export declare function isCustomRun2Async<R>(inp: unknown): inp is CustomRun2Async<R>;
export declare function isCustomRun3Callback<R>(inp: unknown): inp is CustomRun3Callback<R>;
export declare function isRunPipelineFunction<R>(inp: any): inp is RunPipelineFunction<R>;
//# sourceMappingURL=RunPipelineFunction.d.ts.map