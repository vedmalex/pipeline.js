import { ContextType } from '../Context';
import { AnyStage } from './AnyStage';
import { CallbackFunction } from './CallbackFunction';
import { StageObject } from './StageObject';
export type CustomRun0SyncVoid<R extends StageObject> = (this: ContextType<R>) => void;
export type CustomRun0Sync<R extends StageObject> = (this: ContextType<R>) => ContextType<R>;
export type CustomRun0Async<R extends StageObject> = (this: ContextType<R>) => Promise<ContextType<R>>;
export type CustomRun1Sync<R extends StageObject> = (this: AnyStage<R>, ctx: ContextType<R>) => ContextType<R>;
export type CustomRun1Async<R extends StageObject> = (this: AnyStage<R>, ctx: ContextType<R>) => Promise<ContextType<R>>;
export type CustomRun2Async<R extends StageObject> = (this: AnyStage<R>, err: any, ctx: ContextType<R>) => Promise<ContextType<R>>;
export type CustomRun2Callback<R extends StageObject> = (this: AnyStage<R>, ctx: ContextType<R>, done: CallbackFunction<ContextType<R>>) => void;
export type CustomRun3Callback<R extends StageObject> = (this: AnyStage<R>, err: any, ctx: ContextType<R>, done: CallbackFunction<ContextType<R>>) => void;
export type RunPipelineFunction<R extends StageObject> = CustomRun0SyncVoid<R> | CustomRun0Sync<R> | CustomRun0Async<R> | CustomRun1Async<R> | CustomRun1Sync<R> | CustomRun2Callback<R> | CustomRun2Async<R> | CustomRun3Callback<R>;
export declare function isCustomRun0Sync<R extends StageObject>(inp: unknown): inp is CustomRun0Sync<R>;
export declare function isCustomRun0Async<R extends StageObject>(inp: unknown): inp is CustomRun0Async<R>;
export declare function isCustomRun1Async<R extends StageObject>(inp: unknown): inp is CustomRun1Async<R>;
export declare function isCustomRun1Sync<R extends StageObject>(inp: unknown): inp is CustomRun1Sync<R>;
export declare function isCustomRun2Callback<R extends StageObject>(inp: unknown): inp is CustomRun2Callback<R>;
export declare function isCustomRun2Async<R extends StageObject>(inp: unknown): inp is CustomRun2Async<R>;
export declare function isCustomRun3Callback<R extends StageObject>(inp: unknown): inp is CustomRun3Callback<R>;
export declare function isRunPipelineFunction<R extends StageObject>(inp: any): inp is RunPipelineFunction<R>;
//# sourceMappingURL=RunPipelineFunction.d.ts.map